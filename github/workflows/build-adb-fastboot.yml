name: Build Android ADB & Fastboot

on:
  # 允许手动触发此工作流
  workflow_dispatch:

jobs:
  build:
    # 在 Ubuntu 虚拟机上运行
    runs-on: ubuntu-latest
    
    steps:
      - name: 检查代码
        uses: actions/checkout@v4

      - name: 安装构建依赖
        run: |
          sudo apt-get update
          sudo apt-get install -y git-lfs python3 bc ccache make openjdk-11-jdk-headless

      - name: 安装 repo 工具
        run: |
          mkdir -p ~/.bin
          PATH=~/.bin:$PATH
          curl https://storage.g.cn/git-repo-downloads/repo > ~/.bin/repo
          chmod a+x ~/.bin/repo

      - name: 初始化并同步 Android 源代码
        run: |
          mkdir aosp
          cd aosp
          # 初始化 repo 工具，使用一个较新的 Android 版本分支
          repo init -u https://android.googlesource.com/platform/manifest -b android-14.0.0_r1 --depth=1
          
          # 同步所需项目，只下载 adb、fastboot 及其构建系统依赖
          repo sync -c -j$(nproc) \
            platform/build \
            platform/system/core \
            platform/system/adb \
            platform/prebuilts/clang/host/linux-x86 \
            platform/prebuilts/gcc/linux-x86/aarch64/aarch64-linux-android-4.9 \
            platform/prebuilts/misc/linux-x86/libselinux \
            platform/prebuilts/build-tools

      - name: 设置 Android 构建环境
        run: |
          cd aosp
          source build/envsetup.sh
          # 设置 ARM64 目标架构，以匹配大多数 Android 手机
          lunch aosp_arm64-userdebug
          
      - name: 编译 ADB 和 Fastboot
        run: |
          cd aosp
          # 使用 make 命令编译 adb 和 fastboot
          make adb fastboot -j$(nproc)
          
      - name: 列出编译好的文件
        run: |
          ls -lh aosp/out/target/product/generic/system/bin/adb
          ls -lh aosp/out/target/product/generic/system/bin/fastboot
      
      - name: 上传编译好的文件
        # 此处使用最新的 v4 版本，解决了之前的报错
        uses: actions/upload-artifact@v4
        with:
          name: adb-fastboot-android-arm64
          path: aosp/out/target/product/generic/system/bin/
